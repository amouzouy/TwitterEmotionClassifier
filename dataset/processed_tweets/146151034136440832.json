{"tweetSentenceList":[{"constTree":"(ROOT (FRAG (NP (NP (NNP Pple)) (SBAR (WHNP (WP who)) (S (VP (VP (VBP jump) (PP (TO to) (NP (NNS conclusions)))) (CC or) (VP (VB make) (S (NP (NNS assumptions)) (NP (PRP me)))))))) (. .)))","depTree":"[Pple/NNP acl:relcl>[jump/VBP nsubj>who/WP nmod:to>[conclusions/NNS case>to/TO] cc>or/CC conj:or>[make/VB nsubj>who/WP xcomp>[me/PRP nsubj>assumptions/NNS]]] acl:relcl>make/VB punct>./.]","postags":["NNP","WP","VBP","TO","NNS","CC","VB","NNS","PRP","."]},{"constTree":"(ROOT (NP (. .)))","depTree":"./.","postags":["."]},{"constTree":"(ROOT (FRAG (NP (DT all)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VBN avoided) (PP (IN by) (S (ADVP (RB simply)) (VP (VBG ASKING) (NP (NNS questions))))))))))))","depTree":"[all/DT dep>[avoided/VBN nsubjpass>that/WDT aux>can/MD auxpass>be/VB advcl>[ASKING/VBG mark>by/IN advmod>simply/RB dobj>questions/NNS]]]","postags":["DT","WDT","MD","VB","VBN","IN","RB","VBG","NNS"]}],"unigrams":["Pple","who","jump","to","conclusions","or","make","assumptions","me",".",".","all","that","can","be","avoided","by","simply","ASKING","questions"],"bigrams":["<s> Pple","Pple who","who jump","jump to","to conclusions","conclusions or","or make","make assumptions","assumptions me","me .",". <s>","<s> all","all that","that can","can be","be avoided","avoided by","by simply","simply ASKING","questions <s>"],"lemUnigrams":["Pple","who","jump","to","conclusion","or","make","assumption","I",".",".","all","that","can","be","avoid","by","simply","ask","question"],"lemBigrams":["<s> pple","Pple who","who jump","jump to","to conclusion","conclusion or","or make","make assumption","assumption I","I .",". <s>","<s> all","all that","that can","can be","be avoid","avoid by","by simply","simply ask","question <s>"]}