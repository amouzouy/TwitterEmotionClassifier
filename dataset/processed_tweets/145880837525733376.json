{"tweetSentenceList":[{"constTree":"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT no) (JJ concrete) (NN equation)) (PP (IN for) (NP (NN joy))))) (. .)))","depTree":"[is/VBZ expl>There/EX nsubj>[equation/NN neg>no/DT amod>concrete/JJ nmod:for>[joy/NN case>for/IN]] punct>./.]","postags":["EX","VBZ","DT","JJ","NN","IN","NN","."]},{"constTree":"(ROOT (S (NP (PRP you)) (VP (MD ca) (RB n't) (VP (VB explain) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB get) (PP (IN in) (NP (PRP$ your) (NN life))))))))) (. .)))","depTree":"[explain/VB nsubj>you/PRP aux>ca/MD neg>n't/RB ccomp>[get/VB advmod>how/WRB mark>to/TO nmod:in>[life/NN case>in/IN nmod:poss>your/PRP$]] punct>./.]","postags":["PRP","MD","RB","VB","WRB","TO","VB","IN","PRP$","NN","."]}],"unigrams":["There","is","no","concrete","equation","for","joy",".","you","ca","n't","explain","how","to","get","in","your","life","."],"bigrams":["<s> There","There is","is no","no concrete","concrete equation","equation for","for joy",". <s>","<s> you","you ca","ca n't","n't explain","explain how","how to","to get","get in","in your","your life",". <s>"],"lemUnigrams":["there","be","no","concrete","equation","for","joy",".","you","can","not","explain","how","to","get","in","you","life","."],"lemBigrams":["<s> there","there be","be no","no concrete","concrete equation","equation for","for joy",". <s>","<s> you","you can","can not","not explain","explain how","how to","to get","get in","in you","you life",". <s>"]}